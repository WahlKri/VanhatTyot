package ohhaast;

// paras tulos 7; 88418 4s kutsuilla  368360891
import java.util.Arrays;

public class OhHaast {

    public static int maarat = 0;
    public static long kutsujaTehtiin = 0;
    public static int dimensio = 4;
    public static boolean[][] taulu;

    public static void main(String[] args) {
        kutsujaTehtiin = 0;
        maarat = 0;
        taulu = new boolean[dimensio+2][dimensio+2];
        for(int i=0;i<dimensio+2;i++){
            taulu[0][i] = true;
            taulu[i][0] = true;
            taulu[dimensio+1][i] = true;
            taulu[i][dimensio+1] = true;
        }
        
        
        
        
        laskeAskeleet(1, 1, 1);
        System.out.println(maarat);
        System.out.println("...joka saatiin kutsuilla: " + kutsujaTehtiin);
    }

    private static void laskeAskeleet(int y, int x, int k) {

        kutsujaTehtiin++;

        if (taulu[y][x] || ylempiTyhja(x, y) || (onViimeisessa(x, y) && !onKaytyKaikissaRuuduissa(k))) {
            return;
        }

        if (onViimeisessa(x, y) && onKaytyKaikissaRuuduissa(k)) {
            maarat++;
            return;
        }

        taulu[y][x] = true;
        if (y < dimensio - 1) {
            laskeAskeleet(y + 1, x, k + 1);
        }
        if (x < dimensio - 1) {
            laskeAskeleet(y, x + 1, k + 1);
        }
        if (y != 0) {
            laskeAskeleet(y - 1, x, k + 1);
        }
        if (x != 0) {
            laskeAskeleet(y, x - 1, k + 1);
        }
        taulu[y][x] = false;

    }

    public static boolean onUlkona(int x, int y) {
        return (x < 0 || y < 0) || x > dimensio - 1 || y > dimensio - 1;
    }

    public static boolean onViimeisessa(int x, int y) {
        return (x == 0 && y == dimensio - 1);
    }

    public static boolean onKaytyKaikissaRuuduissa(int k) {
        return k == taulu.length * taulu.length;
    }

    private static boolean ylempiTyhja(int x, int y) {

        
        
//         if (y != 0 && y < dimensio - 1 && x != 0 && x < dimensio - 1) {
//            if (taulu[y - 1][x] && taulu[y + 1][x] && !taulu[y][x - 1] && !taulu[y][x + 1]) {
//                return true;
//            }
//            if (taulu[y][x - 1] && taulu[y][x + 1] && !taulu[y - 1][x] && !taulu[y + 1][x]) {
//                return true;
//            }
//        }
        
//        if (y == 0 && x != dimensio - 1 && x > 0) { //tarkistetaan ylin
//            if (!taulu[y][x + 1] && !taulu[y][x - 1]) {
//                return true;
//            }
//        }
//
//        if (y == dimensio - 1 && x != dimensio - 1) { //tarkistetaan alin rivi
//            if (!taulu[y][x + 1]) {
//                return true;
//            }
//        }
//
//        if (y > 0 && (x == 0 || x == dimensio - 1)) { //eka ja vika
//
//            if (!taulu[y - 1][x]) {
//                return true;
//            }
//
//        }
       

        return false;
    }

}
